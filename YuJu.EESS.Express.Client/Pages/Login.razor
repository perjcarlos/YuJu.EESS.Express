@page "/login"
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@rendermode InteractiveAuto

<PageTitle>Ingreso</PageTitle>

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h3>INGRESO</h3>
        </div>
        <div class="mb-3">
            <label>Clave / Pin</label>
            <input @bind="userDto.Password" type="password" class="form-control" placeholder="Password" required="true" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="Authenticate" class="btn btn-primary">Login</button>
        </div>
        @{
            if (showMessageError)
            {
                <div class="alert alert-danger" role="alert">
                    @MessageError
                </div>
            }
        }

    </div>
</div>

@code {
    private bool showMessageError { get; set; }
    private string? MessageError { get; set; }
    private class UserDto
    {
        public string? Password { get; set; }
    }
    private UserDto userDto { get; set; } = new();
    private async Task Authenticate()
    {
        if (userDto.Password != null)
        {
            //var userAccount = await userService.Authenticate(userDto.Password);
            if (true)
            {
                var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
                await customAuthStateProvider.UpdateAuthenticationStateAsync(new UserSessionDto
                {
                    UserId = "jperez",
                    UserName = "Jose perez",
                    Role = "OPERADOR"
                });
                navManager.NavigateTo("/", true);
            }
            else
            {
                MessageError = "Error";
                showMessageError = true;
            }
        }
        else
        {
            MessageError = "Clave requerido";
            showMessageError = true;
        }

    }

}
